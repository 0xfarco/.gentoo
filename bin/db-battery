#!/bin/bash

# Prints all batteries, their percentage remaining and an emoji corresponding
# to charge status (🔌 for plugged up, 🔋 for discharging on battery, etc.).

case $BLOCK_BUTTON in
	3) notify-send "🔋 Battery module" "🔋: discharging
🛑: not charging
♻️: stagnant charge
🔌: charging
⚡: charged
❗: battery very low!" ;;
	6) setsid -f "$TERMINAL" -e "$EDITOR" "$0" ;;
esac

# Loop through all attached batteries and format the info
for battery in /sys/class/power_supply/BAT?*; do
	# If non-first battery, print a space separator.
	[ -n "${capacity+x}" ] && printf " "

	status_raw="$(cat "$battery/status" 2>/dev/null)"
    capacity="$(cat "$battery/capacity" 2>/dev/null)"

	# Sets up the status and capacity
	case "$status_raw" in
        "Full") status="⚡" ;;
        "Discharging") status="🔋" ;;
        "Charging") status="🔌" ;;
        "Not charging") status="🛑" ;;
        "Unknown") status="♻️" ;;
        *) exit 1 ;;
    esac

	# Show low battery warning if discharging and capacity < 25%
    if [ "$status_raw" = "Discharging" ] && [ "$capacity" -lt 25 ]; then
        notify-send -u critical "Battery Warning" "Battery $(basename "$battery") is below 25% ($capacity%)"
        sleep 10  # Prevent spamming notifications
    fi

	# Will make a warn variable if discharging and low
	[ "$status" = "🔋" ] && [ "$capacity" -le 25 ] && warn=❗""
	# Prints the info
	printf "%s%s %d%%" "$status" "$warn" "$capacity"; unset warn
done && printf "\\n"
